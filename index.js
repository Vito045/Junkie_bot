 const TelegramBot = require("node-telegram-bot-api")
 const helper = require("./helpers")
 const config = require("./config")
 const kb = require("./keyboard-buttons")
 const keyboard = require("./keyboard")
 const mongoose = require("mongoose")

 const EasyPayWallet = "28828833"
 const BitcoinWallet = "13Bi9FsmcFJnFtPJSCkAyXB2cy85YAnrPw"

 helper.logStart()

 /*mongoose.Promise = global.Promise
 mongoose.connect(config.DB_URL, {
     useMongoClient: true
 })
     .then(() => console.log('MongoDB connected'))
     .catch((err) => console.log(err))

 const Schema = mongoose.Schema
 const  GoodSchema = new Schema({
     name: {
         type: String,
         required:  true
     },
     description: {
         type: String,
         required:  true
     },
     price: {
         type: Number,
         required:  true
     }
 })
 mongoose.model("good", GoodSchema )
 const Good = mongoose.model("good")
 //database.goods.forEach(g => new Good(g).save())*/

 //====================================

 var Office;
 var Buy;
 var datum = new Date()
 var random = getRndInteger(+(datum.getDate() + "0"), 1000);
 var callbackData;
 const bot = new TelegramBot(config.TOKEN, {
     polling: true
 })
 bot.onText(/\/start/,  msg => {
     const text = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª—É–≤–∞—Ç—å –≤ PcyX \n\n" +
         "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏ –Ω–∞–∂–º–∏—Ç–µ ‚û°Ô∏è /help\n" +
         "\n" +
         "üèò–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–π–æ–Ω:\n" +
         "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" +
         "‚òëÔ∏è –ö–∏—ó–≤, –º.–ë–µ—Ä–µ—Å—Ç–µ–π—Å–∫–∞—è\n" +
         "[ –ù–∞–∂–º–∏—Ç–µ 1Ô∏è‚É£ ]\n" +
         "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" +
         "‚òëÔ∏è –ö–∏—ó–≤, –º.–î–æ—Ä–æ–≥–æ–∂—ã—á–∏\n" +
         "[ –ù–∞–∂–º–∏—Ç–µ 2Ô∏è‚É£]\n" +
         "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" +
         "‚òëÔ∏è –ö–∏—ó–≤, –º.–î—Ä—É–∂–±—ã –ù–∞—Ä–æ–¥–æ–≤\n" +
         "[ –ù–∞–∂–º–∏—Ç–µ 3Ô∏è‚É£ ]\n" +
         "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" +
         "‚òëÔ∏è –ö–∏—ó–≤, –º.–ù–∏–≤–∫–∏\n" +
         "[ –ù–∞–∂–º–∏—Ç–µ 4Ô∏è‚É£ ]\n" +
         "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" +
         "‚òëÔ∏è –ö–∏—ó–≤, –º.–°—ã—Ä–µ—Ü\n" +
         "[ –ù–∞–∂–º–∏—Ç–µ 5Ô∏è‚É£ ]\n" +
         "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" +
         "‚òëÔ∏è –ö–∏—ó–≤, –º.–ß–µ—Ä–Ω–∏–≥–æ–≤—Å–∫–∞—è\n" +
         "[ –ù–∞–∂–º–∏—Ç–µ 6Ô∏è‚É£ ]\n" +
         "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" +
         "‚òëÔ∏è –ö–∏—ó–≤, –º.–î–∞—Ä–Ω–∏—Ü–∞\n" +
         "[ –ù–∞–∂–º–∏—Ç–µ 7Ô∏è‚É£ ]\n" +
         "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" +
         "‚òëÔ∏è –ö–∏—ó–≤, –º.–ó–æ–ª–æ—Ç—ã–µ –≤–æ—Ä–æ—Ç–∞\n" +
         "[ –ù–∞–∂–º–∏—Ç–µ 8Ô∏è‚É£ ]\n" +
         "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" +
         "‚òëÔ∏è –ö–∏—ó–≤, –º.–î–≤–æ—Ä–µ—Ü - –£–∫—Ä–∞–∏–Ω–∞\n" +
         "[ –ù–∞–∂–º–∏—Ç–µ 9Ô∏è‚É£ ]\n" +
         "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" +
         "‚òëÔ∏è –ö–∏—ó–≤, –º.–õ—ã–±–∏–¥—Å—å–∫–∞—è\n" +
         "[ –ù–∞–∂–º–∏—Ç–µ üîü ]\n" +
         "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" +
         "‚òëÔ∏è –ö–∏—ó–≤, –º.–û–ª–∏–º–ø–∏–π—Å–∫–∞—è\n" +
         "[ –ù–∞–∂–º–∏—Ç–µ 1Ô∏è‚É£1Ô∏è‚É£]\n" +
         "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" +
         "‚òëÔ∏è –ö–∏—ó–≤, –º.–û–±–æ–ª–æ–Ω—å\n" +
         "[ –ù–∞–∂–º–∏—Ç–µ 1Ô∏è‚É£2Ô∏è‚É£ ]\n" +
         "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" +
         "\n" +
         "‚ô¶Ô∏è–í —Å–ª—É—á–∞–µ –Ω–µ–Ω–∞—Ö–æ–¥–∞ - –ø–µ—Ä–µ–∑–∞–∫–ª–∞–¥ –ì–ê–†–ê–ù–¢–ò–†–û–í–ê–ù ‚ô¶Ô∏è"
     const moronText = "–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ —Ä–∞–π–æ–Ω, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–¥–µ–ª–∞–π—Ç–µ —ç—Ç–æ"
     bot.sendMessage(helper.getChatId(msg), text, {
         reply_markup: {
             keyboard: keyboard.offices,
             one_time_keyboard: true,
             resize_keyboard: true
         }
     }).then(() => {
         /*bot.on("message", msg => {
             if(!(Office > 0)){
                 bot.sendMessage(helper.getChatId(msg), moronText, {
                     reply_markup: {
                         keyboard: keyboard.offices,
                         one_time_keyboard: true,
                         resize_keyboard: true
                     }
                 })
             }
         })*/

     })
 })
 bot.on('message', msg => {
     console.log('Working', msg.from.first_name)
     const chatId =  helper.getChatId(msg)


     switch(msg.text) {
         case kb.offices.Off1:
             Office = 1
             bot.sendMessage(msg.chat.id,"–í–∏ –≤–∏–±—Ä–∞–ª–∏ —Ä–∞–π–æ–Ω –Ω–æ–º–µ—Ä " + Office)
             bot.sendMessage(chatId,"–ú–µ–Ω—é", {
                 reply_markup: {
                     keyboard: keyboard.home,
                     one_time_keyboard: true,
                     resize_keyboard: true
                 }
             })
             break
         case kb.offices.Off2:
             Office = 2
             bot.sendMessage(msg.chat.id,"–í–∏ –≤–∏–±—Ä–∞–ª–∏ —Ä–∞–π–æ–Ω –Ω–æ–º–µ—Ä " + Office)
             bot.sendMessage(chatId,"–ú–µ–Ω—é", {
                 reply_markup: {
                     keyboard: keyboard.home,
                     one_time_keyboard: true,
                     resize_keyboard: true
                 }
             })
             break
         case kb.offices.Off3:
             Office = 3
             bot.sendMessage(msg.chat.id,"–í–∏ –≤–∏–±—Ä–∞–ª–∏ —Ä–∞–π–æ–Ω –Ω–æ–º–µ—Ä " + Office)
             bot.sendMessage(chatId,"–ú–µ–Ω—é", {
                 reply_markup: {
                     keyboard: keyboard.home,
                     one_time_keyboard: true,
                     resize_keyboard: true
                 }
             })
             break
         case kb.offices.Off4:
             Office = 4
             bot.sendMessage(msg.chat.id,"–í–∏ –≤–∏–±—Ä–∞–ª–∏ —Ä–∞–π–æ–Ω –Ω–æ–º–µ—Ä " + Office)
             bot.sendMessage(chatId,"–ú–µ–Ω—é", {
                 reply_markup: {
                     keyboard: keyboard.home,
                     one_time_keyboard: true,
                     resize_keyboard: true
                 }
             })
             break
         case kb.offices.Off5:
             Office = 5
             bot.sendMessage(msg.chat.id,"–í–∏ –≤–∏–±—Ä–∞–ª–∏ —Ä–∞–π–æ–Ω –Ω–æ–º–µ—Ä " + Office)
             bot.sendMessage(chatId,"–ú–µ–Ω—é", {
                 reply_markup: {
                     keyboard: keyboard.home,
                     one_time_keyboard: true,
                     resize_keyboard: true
                 }
             })
             break
         case kb.offices.Off5:
             Office = 5
             bot.sendMessage(msg.chat.id,"–í–∏ –≤–∏–±—Ä–∞–ª–∏ —Ä–∞–π–æ–Ω –Ω–æ–º–µ—Ä " + Office)
             bot.sendMessage(chatId,"–ú–µ–Ω—é", {
                 reply_markup: {
                     keyboard: keyboard.home,
                     one_time_keyboard: true,
                     resize_keyboard: true
                 }
             })
             break
         case kb.offices.Off6:
             Office = 6
             bot.sendMessage(msg.chat.id,"–í–∏ –≤–∏–±—Ä–∞–ª–∏ —Ä–∞–π–æ–Ω –Ω–æ–º–µ—Ä " + Office)
             bot.sendMessage(chatId,"–ú–µ–Ω—é", {
                 reply_markup: {
                     keyboard: keyboard.home,
                     one_time_keyboard: true,
                     resize_keyboard: true
                 }
             })
             break
         case kb.offices.Off7:
             Office = 7
             bot.sendMessage(msg.chat.id,"–í–∏ –≤–∏–±—Ä–∞–ª–∏ —Ä–∞–π–æ–Ω –Ω–æ–º–µ—Ä " + Office)
             bot.sendMessage(chatId,"–ú–µ–Ω—é", {
                 reply_markup: {
                     keyboard: keyboard.home,
                     one_time_keyboard: true,
                     resize_keyboard: true
                 }
             })
             break
         case kb.offices.Off8:
             Office = 8
             bot.sendMessage(msg.chat.id,"–í–∏ –≤–∏–±—Ä–∞–ª–∏ —Ä–∞–π–æ–Ω –Ω–æ–º–µ—Ä " + Office)
             bot.sendMessage(chatId,"–ú–µ–Ω—é", {
                 reply_markup: {
                     keyboard: keyboard.home,
                     one_time_keyboard: true,
                     resize_keyboard: true
                 }
             })
             break
         case kb.offices.Off9:
             Office = 9
             bot.sendMessage(msg.chat.id,"–í–∏ –≤–∏–±—Ä–∞–ª–∏ —Ä–∞–π–æ–Ω –Ω–æ–º–µ—Ä " + Office)
             bot.sendMessage(chatId,"–ú–µ–Ω—é", {
                 reply_markup: {
                     keyboard: keyboard.home,
                     one_time_keyboard: true,
                     resize_keyboard: true
                 }
             })
             break
         case kb.offices.Off10:
             Office = 10
             bot.sendMessage(msg.chat.id,"–í–∏ –≤–∏–±—Ä–∞–ª–∏ —Ä–∞–π–æ–Ω –Ω–æ–º–µ—Ä " + Office)
             bot.sendMessage(chatId,"–ú–µ–Ω—é", {
                 reply_markup: {
                     keyboard: keyboard.home,
                     one_time_keyboard: true,
                     resize_keyboard: true
                 }
             })
             break
         case kb.offices.Off11:
             Office = 11
             bot.sendMessage(msg.chat.id,"–í–∏ –≤–∏–±—Ä–∞–ª–∏ —Ä–∞–π–æ–Ω –Ω–æ–º–µ—Ä " + Office)
             bot.sendMessage(chatId,"–ú–µ–Ω—é", {
                 reply_markup: {
                     keyboard: keyboard.home,
                     one_time_keyboard: true,
                     resize_keyboard: true
                 }
             })
             break
         case kb.offices.Off12:
             Office = 12
             bot.sendMessage(msg.chat.id,"–í–∏ –≤–∏–±—Ä–∞–ª–∏ —Ä–∞–π–æ–Ω –Ω–æ–º–µ—Ä " + Office)
             bot.sendMessage(chatId,"–ú–µ–Ω—é", {
                 reply_markup: {
                     keyboard: keyboard.home,
                     one_time_keyboard: true,
                     resize_keyboard: true
                 }
             })
             break
         /*case kb.offices.Off13:
             Office = 13
             bot.sendMessage(msg.chat.id,"–í–∏ –≤–∏–±—Ä–∞–ª–∏ –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –Ω–æ–º–µ—Ä " + Office)
             bot.sendMessage(chatId,"–ú–µ–Ω—é", {
                 reply_markup: {
                     keyboard: keyboard.home,
                     one_time_keyboard: true,
                     resize_keyboard: true
                 }
             })
             break
         case kb.offices.Off14:
             Office = 14
             bot.sendMessage(msg.chat.id,"–í–∏ –≤–∏–±—Ä–∞–ª–∏ –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –Ω–æ–º–µ—Ä " + Office)
             bot.sendMessage(chatId,"–ú–µ–Ω—é", {
                 reply_markup: {
                     keyboard: keyboard.home,
                     one_time_keyboard: true,
                     resize_keyboard: true
                 }
             })
             break
         case kb.offices.Off15:
             Office = 15
             bot.sendMessage(msg.chat.id,"–í–∏ –≤–∏–±—Ä–∞–ª–∏ –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –Ω–æ–º–µ—Ä " + Office)
             bot.sendMessage(chatId,"–ú–µ–Ω—é", {
                 reply_markup: {
                     keyboard: keyboard.home,
                     one_time_keyboard: true,
                     resize_keyboard: true
                 }
             })
             break*/

     }
     switch(msg.text) {
         case kb.home.goods:
             if(!(Office > 0)){
                 bot.sendMessage(helper.getChatId(msg), moronText, {
                     reply_markup: {
                         keyboard: keyboard.offices,
                         one_time_keyboard: true,
                         resize_keyboard: true
                     }
                 })
             }else {
                 bot.sendMessage(chatId, "–¢–æ–≤–∞—Ä—ã", {
                     reply_markup: {
                         keyboard: keyboard.goods,
                         one_time_keyboard: true,
                         resize_keyboard: true
                     }
                 })
                 var campare
                 bot.sendMessage(chatId, GoodsName("üçö –ê–º—Ñ–µ—Ç–∞–º–∏–Ω –§–æ—Å—Ñ–∞—Ç 1–≥—Ä.,"), GoodsPrice(350, 1))
                 bot.sendMessage(chatId, GoodsName("üå≥ –®–∏—à–∫–∏ Serious 1 –≥—Ä.,"), GoodsPrice(400, 2))
                 bot.sendMessage(chatId, GoodsName("üå≥üå≥–®–∏—à–∫–∏ Serious 6 - 90% Sat / 10% Ind - 5–≥—Ä,"), GoodsPrice(1600, 3))
                 bot.sendMessage(chatId, GoodsName("üå≥–®–∏—à–∫–∏ WW 1 –≥—Ä.,"), GoodsPrice(300, 4))
                 bot.sendMessage(chatId, GoodsName("üå≥üå≥–®–∏—à–∫–∏ WW - 5–≥—Ä,\n" +
                     "üéâüéâ–ê–∫—Ü–∏—è –¥–ª—è –ß–ò–õ–õ-—Ç—É—Å—ã!"), GoodsPrice(1300, 5))
                 bot.sendMessage(chatId, GoodsName("üçöüçö–ê–º—Ñ–µ—Ç–∞–º–∏–Ω –§–æ—Å—Ñ–∞—Ç 3–≥—Ä.,"), GoodsPrice(850, 6))
                 bot.sendMessage(chatId, GoodsName("üåà MDMA M&Ms - 230 mg - 2—à—Ç,"), GoodsPrice(750, 7))
                 bot.sendMessage(chatId, GoodsName("üåàMDMA Qdance - 230 mg - 2—à—Ç,"), GoodsPrice(750, 8))
                 bot.sendMessage(chatId, GoodsName("üçÑ–ì—Ä–∏–±—ã Pink Buffalo 1–≥—Ä,"), GoodsPrice(300, 9))
                 bot.sendMessage(chatId, GoodsName("üçÑüçÑ–ì—Ä–∏–±—ã Pink Buffalo 3–≥—Ä,"), GoodsPrice(850, 10))
                 bot.sendMessage(chatId, GoodsName("‚ô¶Ô∏èüëÅ‚Äçüó®‚ô¶Ô∏èLSD-25 160 mkg -1 —à—Ç"), GoodsPrice(850, 11))
                 bot.sendMessage(chatId, GoodsName("üëÅ‚Äçüó®‚ô¶Ô∏èüëÅ‚Äçüó®LSD-25 160 mkg -5 —à—Ç"), GoodsPrice(900, 12))
                 bot.on('callback_query', function (data) {
                     var answer = data.data

                     console.log(answer)
                     if(answer > 0) {
                         console.log("11")
                         compare = answer
                         console.log(compare)
                     }

                 })
                 bot.on('callback_query', function (data) {
                     if(data.data > 0){
                         bot.sendMessage(chatId, "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã", {
                             reply_markup: {
                                 inline_keyboard: [
                                     [   {
                                         text: "EasyPay",
                                         callback_data: "Easy"
                                     },
                                         {
                                             text:"Bitcoin",
                                             callback_data: "BTC"
                                         }
                                     ]
                                 ]
                             }
                         })
                     }
                 })
                 bot.on("callback_query", function (data) {
                     var money
                     if(data.data == "Easy") money = 1
                     else if(data.data == "BTC") money = 2
                     console.log(data.data)
                     if((money == 1) || (money == 2)){
                         if(compare == 1 ) bot.sendMessage(chatId, Buying("üçö –ê–º—Ñ–µ—Ç–∞–º–∏–Ω –§–æ—Å—Ñ–∞—Ç 1–≥—Ä.,", 350, money), {parse_mode: "HTML"})
                         else if(compare == 2 ) bot.sendMessage(chatId, Buying("üå≥ –®–∏—à–∫–∏ Serious 1 –≥—Ä.,", 400, money), {parse_mode: "HTML"})
                         else if(compare == 3 ) bot.sendMessage(chatId, Buying("üå≥üå≥–®–∏—à–∫–∏ Serious 6 - 90% Sat / 10% Ind - 5–≥—Ä,", 1600, money), {parse_mode: "HTML"})
                         else if(compare == 4 ) bot.sendMessage(chatId, Buying("üå≥–®–∏—à–∫–∏ WW 1 –≥—Ä.,", 300, money), {parse_mode: "HTML"})
                         else if(compare == 5 ) bot.sendMessage(chatId, Buying("üå≥üå≥–®–∏—à–∫–∏ WW - 5–≥—Ä,\n", 1300, money), {parse_mode: "HTML"})
                         else if(compare == 6 ) bot.sendMessage(chatId, Buying("üçöüçö–ê–º—Ñ–µ—Ç–∞–º–∏–Ω –§–æ—Å—Ñ–∞—Ç 3–≥—Ä.,", 850, money), {parse_mode: "HTML"})
                         else if(compare == 7 ) bot.sendMessage(chatId, Buying("üåà MDMA M&Ms - 230 mg - 2—à—Ç,", 750, money), {parse_mode: "HTML"})
                         else if(compare == 8 ) bot.sendMessage(chatId, Buying("üåàMDMA Qdance - 230 mg - 2—à—Ç,", 750, money), {parse_mode: "HTML"})
                         else if(compare == 9 ) bot.sendMessage(chatId, Buying("üçÑ–ì—Ä–∏–±—ã Pink Buffalo 1–≥—Ä,", 300, money), {parse_mode: "HTML"})
                         else if(compare == 10 ) bot.sendMessage(chatId, Buying("üçÑüçÑ–ì—Ä–∏–±—ã Pink Buffalo 3–≥—Ä,", 850, money), {parse_mode: "HTML"})
                         else if(compare == 11 ) bot.sendMessage(chatId, Buying("‚ô¶Ô∏èüëÅ‚Äçüó®‚ô¶Ô∏èLSD-25 160 mkg -1 —à—Ç", 850, money), {parse_mode: "HTML"})
                         else if(compare == 12 ) bot.sendMessage(chatId, Buying("üëÅ‚Äçüó®‚ô¶Ô∏èüëÅ‚Äçüó®LSD-25 160 mkg -5 —à—Ç", 900, money), {parse_mode: "HTML"})
                     }
                     /*if(compare == 1 ) bot.sendMessage(chatId, Buying("–ö–æ–∫—Å", 105, money), {parse_mode: "HTML"})
                     else if(compare == 2 ) bot.sendMessage(chatId, Buying("–õ–°–î", 150, money), {parse_mode: "HTML"})
                     else if(compare == 3 ) bot.sendMessage(chatId, Buying("–ù–µ—ñ–¥–æ–º–æ", 125, money), {parse_mode: "HTML"})*/
                 })
                 //bot.action("2")
                 //bot.on("callback_query", data => {
                 //cosole.log(data.data)
                 /* var callback = data.data
                  if(callback == 1) {
                      comparedator = 1
                      console.log(comparedator)
                  }else if(data.data == 2)   {
                      comparedator = 2;
                  console.log(comparedator)
                  }else if(data.data == 3)    {
                      comparedator = 3;
                      console.log(comparedator)
                  }
                  bot.sendMessage(chatId, "–í—ã–±–∏—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã", {
                      reply_markup: {
                          inline_keyboard: [
                              [   {
                                  text: "EasyPay",
                                  callback_data: "Easy"
                              },
                                  {
                                      text:"Bitcoin",
                                      callback_data: "BTC"
                                  }
                              ]
                          ]
                      }
                  }).then(() =>{bot.on("callback_query", datas => {console.log(datas.data)})})/*

                  /*bot.on("callback_query", data => {
                      callbackData = data.data
                      console.log(data.data)
                      if(data.data == "Easy") Buy = 1
                      else if(data.data == "BTC") Buy = 2
                      if(comparedator == 1 ) bot.sendMessage(chatId, Buying("–ö–æ–∫—Å", 105, Buy), {parse_mode: "HTML"})
                      else if(comparedator == 2 ) bot.sendMessage(chatId, Buying("–õ–°–î", 150, Buy), {parse_mode: "HTML"})
                      else if(comparedator == 3 ) bot.sendMessage(chatId, Buying("–ù–µ—ñ–¥–æ–º–æ", 125, Buy), {parse_mode: "HTML"})
                  })*/
                 /*switch (callback) {
                     case "1":
                         bot.sendMessage(chatId, "–í—ã–±–∏—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã", {
                             reply_markup: {
                                 inline_keyboard: [
                                     [   {
                                         text: "EasyPay",
                                         callback_data: "Easy"
                                     },
                                         {
                                             text:"Bitcoin",
                                             callback_data: "BTC"
                                         }
                                     ]
                                 ]
                             }
                         })
                         comparedator = 1;
                         console.log(1)
                         break
                     case "2":
                         bot.sendMessage(chatId, "–í—ã–±–∏—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã", {
                             reply_markup: {
                                 inline_keyboard: [
                                     [   {
                                         text: "EasyPay",
                                         callback_data: "Easy"
                                     },
                                         {
                                             text:"Bitcoin",
                                             callback_data: "BTC"
                                         }
                                     ]
                                 ]
                             }
                         })
                         comparedator = 2;
                         console.log(2)
                         break
                     case "3":
                         bot.sendMessage(chatId, "–í—ã–±–∏—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã", {
                             reply_markup: {
                                 inline_keyboard: [
                                     [   {
                                            text: "EasyPay",
                                            callback_data: "Easy"
                                         },
                                         {
                                             text:"Bitcoin",
                                             callback_data: "BTC"
                                         }
                                     ]
                                 ]
                             }
                         })
                         comparedator = 3;
                         console.log(3)
                         break
                 }
                 bot.on("callback_query", function (datas){
                     callbackData = datas.data
                     if(callbackData == "Easy") Buy = 1
                     else if(callbackData == "BTC") Buy = 2
                     if(comparedator == 1 ) bot.sendMessage(chatId, Buying("–ö–æ–∫—Å", 105, Buy), {parse_mode: "HTML"})
                     else if(comparedator == 2 ) bot.sendMessage(chatId, Buying("–õ–°–î", 150, Buy), {parse_mode: "HTML"})
                     else if(comparedator == 3 ) bot.sendMessage(chatId, Buying("–ù–µ—ñ–¥–æ–º–æ", 125, Buy), {parse_mode: "HTML"})
                 })*/
                 //})
                 /*sendGoodsByQuery(chatId)*/}
             break
         case kb.back:
             bot.sendMessage(chatId, "–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", {
                 reply_markup: {
                     keyboard: keyboard.home,
                     one_time_keyboard: true,
                     resize_keyboard: true
                 }
             })
             break
         case kb.home.settings:
             bot.sendMessage(chatId, "–ù–∞—Å—Ç—Ä–æ–π–∫–∏", {
                 reply_markup: {
                     keyboard: keyboard.settings,
                     one_time_keyboard: true,
                     resize_keyboard: true
                 }
             })
             break
         case kb.settings.office:
             bot.sendMessage(chatId, "–í–∏–±–æ—Ä —Ä–∞–π–æ–Ω–∞", {
                 reply_markup: {
                     keyboard: keyboard.offices,
                     one_time_keyboard: true,
                     resize_keyboard: true
                 }
             })
             break
         case kb.office:
             bot.sendMessage(chatId, "–í–∏–±–æ—Ä —Ä–∞–π–æ–Ω–∞", {
                 reply_markup: {
                     keyboard: keyboard.offices,
                     one_time_keyboard: true,
                     resize_keyboard: true
                 }
             })
             break
     }

     //if(Office > 0 && Office < 15) bot.sendMessage(msg.chat.id,"–í–∏ –≤–∏–±—Ä–∞–ª–∏ –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –Ω–æ–º–µ—Ä " + Office)
 })

bot.onText(/\/check/, msg =>{
    const text = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–ª–∞—Ç–µ–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ï—Å–ª–∏ –≤—ã –ø—Ä–æ–∏–∑–≤–µ–ª–∏ –æ–ø–ª–∞—Ç—É, –Ω–æ –≤–∏–¥–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–¥–æ–∂–¥–∏—Ç–µ 5 –º–∏–Ω—É—Ç –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –æ–ø–ª–∞—Ç—É –µ—â–µ —Ä–∞–∑  \n" +
        "\n" +
        "‚ô¶Ô∏è–í–ù–ò–ú–ê–¢–ï–õ–¨–ù–û —á–∏—Ç–∞–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –æ–ø–ª–∞—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫–µ /help‚ô¶Ô∏è\n" +
        "\n" +
        "–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –≥–æ—Ä–æ–¥–æ–≤ –Ω–∞–∂–º–∏—Ç–µ \n" +
        "‚û°Ô∏è /start, –ª–∏–±–æ –Ω–∞–ø–∏—à–∏—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ."
    bot.sendMessage(helper.getChatId(msg), text)
})
 bot.onText(/\/lastorder/, msg =>{
     const text = "–£ –≤–∞—Å –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤.\n" +
         "–ù–∞–∂–º–∏—Ç–µ üëâ /start –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –æ—Ç–¥–µ–ª–µ–Ω–∏—è."
     bot.sendMessage(helper.getChatId(msg), text)
 })
 bot.onText(/\/settings/, msg =>{
     bot.sendMessage(helper.getChatId(msg), "–ù–∞—Å—Ç—Ä–æ–π–∫–∏", {
         reply_markup: {
             keyboard: keyboard.settings,
             one_time_keyboard: true,
             resize_keyboard: true
         }
     })
 })
 bot.onText(/\/office/, msg =>{
     bot.sendMessage(helper.getChatId(msg), "–í–∏–±–æ—Ä —Ä–∞–π–æ–Ω–∞", {
         reply_markup: {
             keyboard: keyboard.offices,
             one_time_keyboard: true,
             resize_keyboard: true
         }
     })
 })
 bot.onText(/\/help/, msg =>{
     bot.sendMessage(helper.getChatId(msg), "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! \n" +
         "–£–≤–∞–∂–∞–µ–º—ã–π –∫–ª–∏–µ–Ω—Ç, –±—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã –ø—Ä–∏ –æ–ø–ª–∞—Ç–µüí∞ –∏ –≤—ã–±–æ—Ä–µ‚úîÔ∏è —Ç–æ–≤–∞—Ä–∞.\n" +
         "–ü–µ—Ä–µ–¥ –ø–æ–∫—É–ø–∫–æ–π —Ç–æ–≤–∞—Ä–∞, –±–æ—Ç –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –í–∞–º –≥–æ—Ä–æ–¥, —Ç–æ–≤–∞—Ä –∏ —É–¥–æ–±–Ω—ã–π –¥–ª—è –í–∞—Å —Ä–∞–π–æ–Ω, –ø–æ—Å–ª–µ —á–µ–≥–æ, –≤—ã–¥–∞—Å—Ç —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã.\n" +
         "–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–¥ –ø–æ–∫—É–ø–∫–æ–π –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Ç–æ–≤–∞—Ä –∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–∞–π–æ–Ω. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∑–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã (–Ω–æ–º–µ—Ä –∫–æ—à–µ–ª—å–∫–∞ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π).\n" +
         "\n" +
         "–ü—Ä–∏ –æ–ø–ª–∞—Ç–µ, –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∑–∞—Ç—å  –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–¥–∞–ª –í–∞–º –±–æ—Ç, –∏–Ω–∞—á–µ –æ–ø–ª–∞—Ç–∞ –Ω–µ –±—É–¥–µ—Ç –∑–∞—Å—á–∏—Ç–∞–Ω–∞ –≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º —Ä–µ–∂–∏–º–µ –∏ –í—ã –Ω–µ –ø–æ–ª—É—á–∏—Ç–µ –∞–¥—Ä–µ—Å.\n" +
         "–í—Å–µ–≥–¥–∞ –∑–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, —Å –ø–æ–º–æ—â—å—é –Ω–∏—Ö, –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ (–ø–æ–ª—É—á–∏—Ç—å –∞–¥—Ä–µ—Å) –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –∏ —Å –ª—é–±–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞. –°–æ—Ö—Ä–∞–Ω—è–π—Ç–µ —á–µ–∫ –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –Ω–µ –ø–æ–ª—É—á–∏–ª–∏ –∞–¥—Ä–µ—Å. –ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–ª–∞—Ç–µ–∂–µ–π —Å –æ–¥–Ω–∏–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º. –ü–ª–∞—Ç–µ–∂–∏ —Å—É–º–º–∏—Ä—É—é—Ç—Å—è –∏ –≤ —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ —Å—É–º–º–∞ –ø–æ–ª–Ω–∞—è - –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ —Å–≤–æ–π –∞–¥—Ä–µ—Å.\n" +
         "–ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã, –∫–æ—à–µ–ª–µ–∫, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏ —Å—É–º–º–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ç–æ—á–Ω—ã–º–∏. –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –∫–∞–∫–∏–µ-–ª–∏–±–æ –ø—Ä–æ–±–ª–µ–º—ã - –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É.\n" +
         "\n" +
         "–ü–æ—Å–ª–µ –≤–Ω–µ—Å–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂–∞ –∏ –µ—Å–ª–∏ –í–∞—à–∞ –æ–ø–ª–∞—Ç–∞ –±—É–¥–µ—Ç –Ω–∞–π–¥–µ–Ω–∞ - –í—ã –ø–æ–ª—É—á–∏—Ç–µ –∞–¥—Ä–µ—Å –≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º —Ä–µ–∂–∏–º–µ.\n" +
         "\n" +
         "–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ —Å—Ç–∞—Ä—Ç–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫ –≤—ã–±–æ—Ä—É –≥–æ—Ä–æ–¥–æ–≤, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ /start –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n" +
         "\n" +
         "–ü—Ä–∏—è—Ç–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫!üöÄüöÄüöÄ", {
         reply_markup: {
             keyboard: keyboard.home,
             one_time_keyboard: true,
             resize_keyboard: true
         }
     })
 })
 /*function sendGoodsByQuery(chatId, query) {
     Good.find(query).then(goods => {
         const html = goods.map((g, i) => {
             return g.name + "\n"+
                    g.description + "\n"
         }).join("\n")

         bot.sendMessage(chatId, html, {
                 parse_mode: "HTML"
         })
     })
 }*/
 function GoodsName(Name) {
     var texts = "<strong> " + Name + " </strong>"
     return texts
 }
 function GoodsPrice(Price, data) {
     var price = {
         reply_markup: {
             inline_keyboard: [
                 [{
                     text: Price + " –≥—Ä–Ω.",
                     callback_data: data
                 }]
             ]
         },
         parse_mode: "HTML"
     }
     return price
 }
 function Buying(Name, price, value) {
     const Easy = "<strong>–í—ã –ø—Ä–∏–æ–±—Ä–µ—Ç–∞–µ—Ç–µ</strong>\n" +
     Name +
     "\nüí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å " + price + " –≥—Ä–Ω. üí∞\n" +
     "üè† —Ä–∞–π–æ–Ω–∞ –Ω–æ–º–µ—Ä " + Office + "\n" +
     "( –¥–ª—è —Å–º–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /shop ) \n"+
     "( –¥–ª—è —Å–º–µ–Ω—ã —Ä–∞–π–æ–Ω–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /settings ) \n\n"+
     "–î–ª—è –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞,\n" +
     "–æ–ø–ª–∞—Ç–∏—Ç–µ <strong>" + price + "</strong> –≥—Ä–Ω –Ω–∞ —Å—á–µ—Ç EasyPay:\n <strong>" +
     EasyPayWallet + "</strong>\n\n"+
         "–ó–∞–∫–∞–∑ <strong>‚Ññ" + random + "</strong> –∑–∞–ø–æ–º–Ω–∏—Ç–µ –µ–≥–æ.\n" +
     "\n" +
     "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ \n" +
         "üëâ /check_" + random +", –±–æ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç –æ–ø–ª–∞—Ç—É, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç –∑–∞–∫–∞–∑ –∏ —Å—Ä–∞–∑—É –∏ –≤—ã–¥–∞—Å—Ç –∞–¥—Ä–µ—Å. \n" +
     "\n" +
     "–ß—Ç–æ–±—ã –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –∑–∞–∫–∞–∑–∞, –Ω–∞–∂–º–∏—Ç–µ üëâ /start\n" +
     "\n" +
     "–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –í–∞—à –∑–∞–∫–∞–∑\n" +
     "–Ω–∞–∂–º–∏—Ç–µ üëâ /lastorder"
     const BTC = "<strong>–í—ã –ø—Ä–∏–æ–±—Ä–µ—Ç–∞–µ—Ç–µ</strong>\n" +
         Name +
         "\nüí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å " + price + " –≥—Ä–Ω. üí∞\n" +
         "üè† —Ä–∞–π–æ–Ω –Ω–æ–º–µ—Ä " + Office + "\n" +
         "( –¥–ª—è —Å–º–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /shop ) \n"+
         "( –¥–ª—è —Å–º–µ–Ω—ã —Ä–∞–π–æ–Ω–∞ –Ω–∞–∂–º–∏—Ç–µ üëâ /settings ) \n\n"+
         "–î–ª—è –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞,\n" +
         "–æ–ø–ª–∞—Ç–∏—Ç–µ <strong>" + (price * 0.0000055) + "</strong> –Ω–∞ Bitcoin –∫–æ—à–µ–ª–µ–∫:\n" +
         "<strong>" + BitcoinWallet + "</strong>\n" +
         "\n" +
         "–ó–∞–∫–∞–∑ <strong>‚Ññ" + random + "</strong> –∑–∞–ø–æ–º–Ω–∏—Ç–µ –µ–≥–æ.\n" +
         "\n" +
         "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ \n" +
         "üëâ /check_" + random +", –±–æ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç –æ–ø–ª–∞—Ç—É, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç –∑–∞–∫–∞–∑ –∏ —Å—Ä–∞–∑—É –∏ –≤—ã–¥–∞—Å—Ç –∞–¥—Ä–µ—Å. \n" +
         "\n" +
         "–ß—Ç–æ–±—ã –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –∑–∞–∫–∞–∑–∞, –Ω–∞–∂–º–∏—Ç–µ üëâ /start\n" +
         "\n" +
         "–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –í–∞—à –∑–∞–∫–∞–∑\n" +
         "–Ω–∞–∂–º–∏—Ç–µ üëâ /lastorder"
     if(value === 1) return Easy
     else if(value === 2)return BTC

 }
 function getRndInteger(min, max) {
     return Math.floor(Math.random() * (max - min + 1) ) + min;
 }
